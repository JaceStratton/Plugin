package me.jacestratton;

import java.io.FileNotFoundException;
import java.io.IOException;

import org.bukkit.command.Command;
import org.bukkit.command.CommandSender;
import org.bukkit.entity.Player;
import org.bukkit.plugin.java.JavaPlugin;

/**
 * The main class to initialize the plugin and run commands.
 * 
 * @author JaceStratton
 * 
 * @version 1.0
 */
public class JacesPlugin extends JavaPlugin {
    private GuideBook tips;

    /**
     * Initializes fields and logs the plugin initialization.
     */
    @Override
    public void onEnable() {
        getLogger().info("JacesPlugin is online!");
        tips = new GuideBook(this);
    }

    /**
     * Closes any open processes and stops the plugin.
     */
    @Override
    public void onDisable() {
        tips.closeFileWriter();
    }

    /**
     * Catches commands.
     * 
     * @param sender
     *            The player who sent the command.
     * @param cmd
     *            The command that was entered by the player.
     * @param label
     *            ???
     * @param args
     *            The arguments included for the command.
     */
    public boolean onCommand(CommandSender sender, Command cmd, String label, String[] args) {
        if (sender instanceof Player) {
            Player player = (Player) sender;
            if (cmd.getName().equalsIgnoreCase("tip") && args.length == 0) {
                player.sendMessage(tips.printTip());
                return true;
            }
            if (cmd.getName().equalsIgnoreCase("addtip")) {
                if (args.length != 0) {
                    StringBuilder string = new StringBuilder(args[0]);
                    for (int i = 1; i < args.length; i++) {
                        string.append(" " + args[i]);
                    }
                    try {
                        tips.addTip(string.toString());
                        player.sendMessage("Your tip has been added to the guidebook.");
                    }
                    catch (IOException e) {
                        e.printStackTrace();
                        player.sendMessage("There was a problem adding the tip )=");
                        return false;
                    }
                    try {
                        tips = new GuideBook();
                    }
                    catch (FileNotFoundException e) {
                        e.printStackTrace();
                    }
                    return true;
                }
                player.sendMessage("You can't add an empty tip.");
                return false;
            }
        }
        return false;
    }

}
